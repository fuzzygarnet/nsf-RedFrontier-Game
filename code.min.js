const config={type:Phaser.AUTO,backgroundColor:"#ffffff",scene:{preload:preload,create:create,update:update}};let currentScene,currentPlayer;document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("introScreen");const e=document.getElementById("playButton"),t=document.getElementById("startGameButton"),n=document.getElementById("introScreen"),r=document.getElementById("researchCountdown"),o=document.getElementById("instructionModal");r.style.display="none",e.addEventListener("click",(()=>{document.getElementById("titleScreen").style.display="none",n.style.display="block"})),t.addEventListener("click",(()=>{n.style.display="none";new Phaser.Game(config);r.style.display="block",o&&(o.style.display="block")}))}));let board,redBaseTiles,blueBaseTiles,inventoryText,redUnits=[],blueUnits=[],selectedUnit=null,redInventory={water:0,regolith:0,sulfur:0,basalt:0},blueInventory={water:0,regolith:0,sulfur:0,basalt:0},playerCanMove=!1;var gameOver=!1,redTurnCount=0,blueTurnCount=0;let redTurnCountText,blueTurnCountText,currentPlayerText,redMinerCost={regolith:10,basalt:5},blueMinerCost={regolith:10,basalt:5};const redMinerCostIncrement={regolith:5,basalt:3},blueMinerCostIncrement={regolith:5,basalt:3};var pendingTradeProposal=null;let redPopulationText,bluePopulationText,game,redTechProgress=initializeTechProgress(),blueTechProgress=initializeTechProgress(),redTurnProgress=null,blueTurnProgress=null,redCurrentResearch=null,blueCurrentResearch=null,redPopulation=10,bluePopulation=10;const buildingCosts={"Food Growing":{water:5,regolith:10},"Water Processing":{regolith:15,basalt:10},"Medical Center":{water:10,sulfur:15,regolith:20},"Recreational Center":{basalt:20,sulfur:10},"Radiation Center":{sulfur:25,regolith:20},Cintering:{regolith:30,basalt:15},"Research Facility":{water:20,regolith:25,sulfur:20,basalt:10}},buildingTechMapping={"Food Growing":"Food Growing","Water Processing":"Water Processing","Medical Center":"Medical Center","Recreational Center":"Recreational Center","Radiation Center":"Radiation Center",Cintering:"Cintering","Research Facility":"Research Facility"},researchTimeReduction=1,crisisEvents=[{name:"Dust Storm",description:"A massive dust storm disrupts research. Research time increases for the current tech.",effect:e=>{const t="Red"===e?redCurrentResearch:blueCurrentResearch;t&&(t.tech.turnsLeft+=Phaser.Math.Between(1,3))}},{name:"Crop Failure",description:"Crop failure reduces food supplies. Resources decrease.",effect:e=>{const t="Red"===e?redInventory:blueInventory;t.water=Math.max(0,t.water-Phaser.Math.Between(1,5)),t.sulfur=Math.max(0,t.sulfur-Phaser.Math.Between(1,3)),updateInventoryDisplay()}},{name:"Radiation Leak",description:"A radiation leak affects your colony, slowing population growth.",effect:e=>{"Red"===e?(redPopulation=Math.max(0,redPopulation-Phaser.Math.Between(5,10)),document.getElementById("redPopulation").innerText=`Red Population: ${redPopulation}`):"Blue"===e&&(bluePopulation=Math.max(0,bluePopulation-Phaser.Math.Between(5,10)),document.getElementById("bluePopulation").innerText=`Blue Population: ${bluePopulation}`)}}];let currentTechButton=null;function preload(){this.load.image("background","Assets/redFrontierBackground.png"),this.load.image("Red","Assets/redRover.png"),this.load.image("Blue","Assets/blueRover.png"),this.load.image("RedBase","Assets/red_base.png"),this.load.image("BlueBase","Assets/green_base.png"),this.load.image("instructionIcon","Assets/questionMark.jpg"),this.load.image("frontieropediaIcon","Assets/frontieropediaButton.png"),this.load.image("modalButton","Assets/techTreeButton.jpg")}function create(){currentScene=this;const e=this.cameras.main.width/10,t=this.cameras.main.height/7,n=this.add.image(0,0,"background").setOrigin(0,0);n.displayWidth=10*e,n.displayHeight=7*t,n.x=this.cameras.main.width/2,n.y=this.cameras.main.height/2,n.setOrigin(.5,.5),initializeBoard();const[r,o]=generateAndPlaceBases(this);currentPlayer="Red",drawGrid(this),initializeResources(),this.input.on("pointerdown",(function(e){gameOver||handleClick(e,this)}),this),createInstructionButton(),createTechTreeModal(),createFrontieropediaButton(),createInventoryNavbar(),randomizeStartingInventory(),updateInventoryDisplay()}function initializeTechProgress(){return{branches:[{title:"Farming Technologies",techs:[{name:"Algae Cultivation",turns:randomTurns(),completed:!1,unlocked:!0,description:"Improves basic farming techniques.",unlockedBenefits:"You are now able to cultivate algae. While it is fairly easy to produce, it tastes pretty bad. Population added"},{name:"Aeroponics",turns:randomTurns(),completed:!1,unlocked:!1,description:"Advanced farming with minimal water usage.",unlockedBenefits:"No more bland algae. Now you are able to grow crops like potatoes and spinach through the use of aeroponics. Population added."},{name:"Synthetic Meat",turns:randomTurns(),completed:!1,unlocked:!1,description:"Creates meat in a lab.",unlockedBenefits:"With the production of synthetic meat, your scientists have determined that this should be enough food to support a developing colony. All food technologies have been completed. Population added."}]},{title:"Building Technologies",techs:[{name:"Food Growing",turns:randomTurns(),completed:!1,unlocked:!0,description:"Improves food production.",unlockedBenefits:"You are now able to construct the food production center. Population added."},{name:"Water Processing",turns:randomTurns(),completed:!1,unlocked:!0,description:"Processes water for use.",unlockedBenefits:"You are now able to contruct the water processing center to purify water for drinking as well as for industrial uses. Population added"},{name:"Medical Facility",turns:randomTurns(),completed:!1,unlocked:!0,description:"Establish a medical facility to help your people.",unlockedBenefits:"You are now able to construct a medical facility to help treat various illnesses and injuries."},{name:"Recreational Center",turns:randomTurns(),completed:!1,unlocked:!0,description:"Build a recreational center to boost morale.",unlockedBenefits:"Unlocks the recreational center"},{name:"Radiation Center",turns:randomTurns(),completed:!1,unlocked:!0,description:"Unlocks advanced living shelters",unlockedBenefits:"No more basic living shelters, leaking radiation. With this technology, you will now have access to advanced radiation protection."},{name:"Cintering",turns:randomTurns(),completed:!1,unlocked:!0,description:"Reduces building costs.",unlockedBenefits:"Thanks to the power of sintering, you will now require less resources in order to contruct your facilities."},{name:"Research Facility",turns:randomTurns(),completed:!1,unlocked:!0,description:"Establish a research facility",unlockedBenefits:"You are now able to construct a research facility, which will reduce the time it takes to research the remaining technologies."}]}]}}function randomTurns(){return Math.floor(5*Math.random())+3}function randomizeStartingInventory(){redInventory.water=Phaser.Math.Between(0,3),redInventory.regolith=Phaser.Math.Between(0,3),redInventory.sulfur=Phaser.Math.Between(0,3),redInventory.basalt=Phaser.Math.Between(0,3),blueInventory.water=Phaser.Math.Between(0,3),blueInventory.regolith=Phaser.Math.Between(0,3),blueInventory.sulfur=Phaser.Math.Between(0,3),blueInventory.basalt=Phaser.Math.Between(0,3)}function initializeBoard(){board=[];for(let e=0;e<7;e++){board[e]=[];for(let t=0;t<10;t++)board[e][t]={content:null,water:0,regolith:0,sulfur:0,basalt:0}}}function initializeResources(){for(let e=0;e<7;e++)for(let t=0;t<10;t++){const n=redBaseTiles.some((n=>n.x===t&&n.y===e)),r=blueBaseTiles.some((n=>n.x===t&&n.y===e));if(n||r)continue;board[e][t].water=Phaser.Math.Between(2,6),board[e][t].regolith=Phaser.Math.Between(2,8),board[e][t].sulfur=Phaser.Math.Between(0,4),board[e][t].basalt=Phaser.Math.Between(2,6)}}function generateAndPlaceBases(e){redBaseTiles=[{x:2,y:4},{x:2,y:5},{x:3,y:5},{x:3,y:4}],blueBaseTiles=[{x:6,y:2},{x:5,y:2}],redBaseTiles.forEach((e=>{board[e.y][e.x].content="RedBase"})),blueBaseTiles.forEach((e=>{board[e.y][e.x].content="BlueBase"}));const t=redBaseTiles[0],n=blueBaseTiles[0];return createUnit(t.x,t.y,"Red",e),createUnit(n.x,n.y,"Blue",e),[t,n]}function drawGrid(e){const t=e.add.graphics();t.lineStyle(1,9109504,1);const n=e.cameras.main.width/10,r=e.cameras.main.height/7;for(let r=0;r<=e.cameras.main.width;r+=n)t.moveTo(r,0),t.lineTo(r,e.cameras.main.height);for(let n=0;n<=e.cameras.main.height;n+=r)t.moveTo(0,n),t.lineTo(e.cameras.main.width,n);t.strokePath()}function createInstructionButton(){const e=document.getElementById("instructionButton");e&&e.remove();const t=document.createElement("div");t.id="instructionButton",t.style.position="absolute",t.style.bottom="200px",t.style.left="100px",t.style.backgroundColor="#f9f9f9",t.style.padding="10px",t.style.borderRadius="50%",t.style.cursor="pointer",t.style.zIndex="1000";const n=document.createElement("img");n.src="Assets/questionMark.jpg",n.alt="Instructions",n.style.width="40px",n.style.height="40px",n.style.display="block",n.style.margin="auto",t.appendChild(n),t.addEventListener("click",(function(){openModal("instructionModal")})),document.body.appendChild(t)}function createFrontieropediaButton(){const e=document.getElementById("frontieropediaButton");e&&e.remove();const t=document.createElement("div");t.id="frontieropediaButton",t.style.position="absolute",t.style.bottom="300px",t.style.left="100px",t.style.backgroundColor="#f9f9f9",t.style.padding="10px",t.style.borderRadius="50%",t.style.cursor="pointer",t.style.zIndex="1000";const n=document.createElement("img");n.src="Assets/frontieropediaButton.png",n.alt="Instructions",n.style.width="40px",n.style.height="40px",n.style.display="block",n.style.margin="auto",t.appendChild(n),t.addEventListener("click",(function(){openModal("frontieropediaModal")})),document.body.appendChild(t)}function openSection(e){document.querySelectorAll(".section-content").forEach((e=>{e.classList.remove("active"),e.style.display="none"}));document.querySelectorAll(".subsection-content").forEach((e=>{e.classList.remove("active"),e.style.display="none"}));const t=document.getElementById(e);t&&(t.classList.add("active"),t.style.display="block")}function showSubsection(e){document.querySelectorAll(".subsection-content").forEach((e=>{e.classList.remove("active"),e.style.display="none"}));const t=document.querySelector(".section-content.active");t&&(t.style.display="none");const n=document.getElementById(e);n&&(n.classList.add("active"),n.style.display="block")}function showWinAlert(e){const t=document.getElementById("winAlertModal"),n=document.getElementById("winTitle"),r=document.getElementById("winMessage");n.textContent="Congratulations!",r.textContent=`${e} has reached 500 population!. You have won!`,t.style.display="block"}function createInventoryNavbar(){const e=document.getElementById("inventoryNavbar");e&&e.remove();const t=document.createElement("div");t.id="inventoryNavbar",t.style.position="absolute",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="50px",t.style.display="flex",t.style.alignItems="center",t.style.backgroundColor="#000",t.style.color="#0f0",t.style.fontFamily="'Courier New', Courier, monospace",t.style.fontSize="16px",t.style.justifyContent="flex-start",t.style.padding="0 10px";const n=document.createElement("div");n.style.display="inline-block";const r=[{id:"currentPlayer",label:"Current Player",value:currentPlayer},{id:"redTurnCount",label:"Player Red Turns",value:redTurnCount},{id:"blueTurnCount",label:"Player Blue Turns",value:blueTurnCount},{id:"redPopulation",label:"Red Population",value:redPopulation},{id:"bluePopulation",label:"Blue Population",value:bluePopulation}],o=document.createElement("span");o.id="currentPlayer",o.style.fontWeight="bold",o.style.color="Red"===currentPlayer?"red":"#3D3BF3",o.innerText=`Current Player: ${currentPlayer}`,n.appendChild(o);["Water","Regolith","Sulfur","Basalt"].forEach((e=>{const t=document.createElement("span");t.id=`inventory-${e.toLowerCase()}`,t.innerText=` | ${e}: ???`,n.appendChild(t)})),r.slice(1).forEach((e=>{const t=document.createElement("span");t.id=e.id,t.innerText=` | ${e.label}: ${e.value}`,n.appendChild(t)})),t.appendChild(n),document.body.appendChild(t),updateInventoryDisplay()}function createTechTreeModal(){const e=document.getElementById("modalButton");e&&e.remove();const t=document.createElement("div");t.id="modalButton",t.style.position="absolute",t.style.top="500px",t.style.right="100px",t.style.transform="none";const n=document.createElement("img");n.src="Assets/techTreeButton.jpg",n.alt="Open Modal",n.style.width="50px",t.style.borderRadius="50%",n.style.cursor="pointer",t.style.backgroundColor="#f9f9f9",t.style.padding="10px",n.addEventListener("click",(function(){openModal("bigModal")})),t.appendChild(n),document.body.appendChild(t),t.style.zIndex="1000"}function createTechTree(){("Red"===currentPlayer?redTechProgress:blueTechProgress).branches.forEach(((e,t)=>{const n=document.querySelector(`#branch${t+1} .branch-grid`);n&&(n.innerHTML="",e.techs.forEach(((r,o)=>{const a=document.createElement("div");a.className="tech-button",a.textContent=`${r.name} (${r.turns} turns)`;const l=document.createElement("div");if(l.className="tooltip",l.textContent=r.description,l.style.display="none",a.appendChild(l),a.addEventListener("mouseenter",(()=>l.style.display="block")),a.addEventListener("mouseleave",(()=>l.style.display="none")),r.completed?(a.style.backgroundColor="#aaffaa",a.style.pointerEvents="none"):r.unlocked?(a.style.cursor="pointer",a.addEventListener("click",(()=>startResearch(t,o)))):(a.style.opacity="0.5",a.style.cursor="default"),n.appendChild(a),"Farming Technologies"===e.title&&o<e.techs.length-1){const e=document.createElement("div");e.className="arrow",n.appendChild(e)}})))}))}function showTechUnlockedModal(e,t,n,r){document.getElementById("techUnlockedModal");const o=document.getElementById("techUnlockedTitle"),a=document.getElementById("techUnlockedDescription"),l=("Red"===e?redTechProgress:blueTechProgress).branches[n].techs[r];o.textContent=`${l.name} Research Completed!`,a.innerHTML=`\n    ${l.description||"No description available."}<br>\n    ${l.unlockedBenefits||"No specific benefits unlocked."}\n  `,openModal("techUnlockedModal"),l.completed=!0;document.querySelector(`#branch${n+1} .branch-grid`).children[r].style.backgroundColor="#aaffaa",unlockDependentTechs(e,n,r),"Red"===currentPlayer?redCurrentResearch=null:blueCurrentResearch=null}function startResearch(e,t){const n="Red"===currentPlayer?redCurrentResearch:blueCurrentResearch,r=("Red"===currentPlayer?redTechProgress:blueTechProgress).branches[e].techs[t];if(r.completed)return void openAlertModal("This tech has already been researched.");n&&n.tech!==r&&currentTechButton&&(currentTechButton.style.backgroundColor="",currentTechButton.style.color=""),r.turnsLeft=r.turnsLeft||r.turns,"Red"===currentPlayer?redCurrentResearch={branchIndex:e,techIndex:t,tech:r}:blueCurrentResearch={branchIndex:e,techIndex:t,tech:r};const o=document.querySelector(`#branch${e+1} .branch-grid`),a=Array.from(o.children).find((e=>e.textContent.includes(r.name)));a.style.backgroundColor="#add8e6",a.style.color="#000",currentTechButton=a,updateResearchCountdown()}function handleClick(e,t){if(t.actionMenu)return;const n=t.cameras.main.width/10,r=t.cameras.main.height/7,o=Math.floor(e.x/n),a=Math.floor(e.y/r);if(isValidTile(o,a)){if(isBaseTile(o,a)){const e=board[a][o].content;return void("RedBase"===e&&"Red"===currentPlayer||"BlueBase"===e&&"Blue"===currentPlayer?openBaseMenuModal():openAlertModal("You cannot interact with the other player's base!"))}playerCanMove&&isTileEmpty(o,a)&&(placeIcon(o,a,t,n,r),checkGameOver(t),playerCanMove=!1,selectedUnit=null,redIconInteractiveSet=!1,blueIconInteractiveSet=!1)}}function isBaseTile(e,t){const n=redBaseTiles.some((n=>n.x===e&&n.y===t)),r=blueBaseTiles.some((n=>n.x===e&&n.y===t));return n||r}function isValidTile(e,t){return e>=0&&e<10&&t>=0&&t<7}function isTileEmpty(e,t){return null===board[t][e].content||("Red"===currentPlayer&&"RedBase"===board[t][e].content||"Blue"===currentPlayer&&"BlueBase"===board[t][e].content)}function isAdjacent(e,t,n,r){const o=Math.abs(e-n),a=Math.abs(t-r);return 1===o&&0===a||0===o&&1===a}function placeIcon(e,t,n,r,o){if(!selectedUnit)return;if(!isAdjacent(selectedUnit.x,selectedUnit.y,e,t))return void openAlertModal("You can only move to an adjacent tile!");if(!isTileEmpty(e,t))return void openAlertModal("Invalid move: Tile is occupied or not allowed.");const a=e*r+r/2,l=t*o+o/2;freePreviousTile(selectedUnit,n),selectedUnit.sprite.x=a,selectedUnit.sprite.y=l,selectedUnit.x=e,selectedUnit.y=t,"RedBase"===board[t][e].content&&"Red"===currentPlayer||"BlueBase"===board[t][e].content&&"Blue"===currentPlayer||(board[t][e].content=currentPlayer),selectedUnit.hasActed=!0,updateMinerIndicators(),selectedUnit.sprite.input.enabled=!1,allUnitsActed()&&switchTurn(n),selectedUnit=null,playerCanMove=!1}function freePreviousTile(e,t){const n=e.x,r=e.y;board[r][n].content===currentPlayer&&("Red"===currentPlayer&&"RedBase"===board[r][n].content||"Blue"===currentPlayer&&"BlueBase"===board[r][n].content||(board[r][n].content=null))}function switchTurn(e){"Red"===currentPlayer?(redTurnCount++,document.getElementById("redTurnCount").innerText=`Player Red Turns: ${redTurnCount}`,redTurnProgress&&redTurnProgress()):(blueTurnCount++,document.getElementById("blueTurnCount").innerText=`Player Blue Turns: ${blueTurnCount}`,blueTurnProgress&&blueTurnProgress()),1===Phaser.Math.Between(1,20)&&triggerCrisisEvent(),currentPlayer="Red"===currentPlayer?"Blue":"Red",createTechTree(),document.getElementById("currentPlayer").innerText=`Current Player: ${currentPlayer}`,createTechTree(),updateResearchCountdown(),updateInventoryDisplay(),createInventoryNavbar(),pendingTradeProposal&&pendingTradeProposal.responder===currentPlayer&&"pending"===pendingTradeProposal.status&&openTradeResponseModal(),pendingTradeProposal&&pendingTradeProposal.proposer===currentPlayer&&"pending"!==pendingTradeProposal.status&&("accepted"===pendingTradeProposal.status?(openAlertModal("Your trade proposal was accepted!"),executeTrade()):"declined"===pendingTradeProposal.status&&openAlertModal("Your trade proposal was declined."),pendingTradeProposal=null),resetUnitActions(),updateMinerIndicators(),checkGameOver()}function checkGameOver(e){redPopulation>=500?declareWinner("Red"):bluePopulation>=500&&declareWinner("Blue")}function declareWinner(e){gameOver=!0;game.scene.scenes[0].input.enabled=!1,showWinAlert(e)}function closeModal(e){const t=document.getElementById(e);t&&(t.style.display="none")}function openModal(e){const t=document.getElementById(e);t&&(t.style.display="block"),"bigModal"===e&&createTechTree()}function openBaseMenuModal(){openModal("baseMenuModal")}function openTradeModal(){closeModal("baseMenuModal"),openModal("tradeModal")}function openPurchaseModal(){closeModal("baseMenuModal");const e=document.getElementById("purchaseModal").querySelector("#purchaseCost"),t="Red"===currentPlayer?redMinerCost:blueMinerCost;e.innerHTML="";const n=Object.entries(t).map((([e,t])=>`${t} ${e}`)).join(", "),r=document.createElement("button");r.textContent=`Purchase Miner (${n})`,r.classList.add("modal-button"),r.onclick=confirmMinerPurchase,e.appendChild(r);const o=currentPlayer;for(const[t,n]of Object.entries(buildingTechMapping))if(isTechResearched(o,n)){const n=buildingCosts[t],r=Object.entries(n).map((([e,t])=>`${t} ${e}`)).join(", "),o=document.createElement("button");o.textContent=`${t} (${r})`,o.classList.add("modal-button"),o.onclick=()=>confirmBuildingPurchase(t),e.appendChild(o)}openModal("purchaseModal")}function openAlertModal(e,t="Alert"){const n=document.getElementById("alertModal"),r=document.getElementById("alertTitle"),o=document.getElementById("alertMessage");r.innerText=t,o.innerText=e,n.style.display="block"}function closeAlertModal(){document.getElementById("alertModal").style.display="none"}function confirmMinerPurchase(){const e="Red"===currentPlayer?redInventory:blueInventory,t="Red"===currentPlayer?redMinerCost:blueMinerCost,n="Red"===currentPlayer?redMinerCostIncrement:blueMinerCostIncrement;if(Object.entries(t).every((([t,n])=>e[t]>=n))){if(Object.entries(t).forEach((([t,n])=>{e[t]-=n})),"Red"===currentPlayer){const e=redBaseTiles[0];createUnit(e.x,e.y,"Red",currentScene)}else{const e=blueBaseTiles[0];createUnit(e.x,e.y,"Red",currentScene)}Object.entries(n).forEach((([e,n])=>{t[e]+=n})),openAlertModal("Miner purchased! Cost for the next miner has increased."),updateInventoryDisplay(),closeModal("purchaseModal")}else openAlertModal("Insufficient resources to purchase a miner.")}function confirmBuildingPurchase(e){const t=buildingCosts[e],n="Red"===currentPlayer?redInventory:blueInventory;if(!Object.entries(t).every((([e,t])=>n[e]>=t)))return void openAlertModal("Insufficient resources to purchase this building.");Object.entries(t).forEach((([e,t])=>{n[e]-=t})),openAlertModal(`You successfully purchased ${e}!`);const r=Phaser.Math.Between(20,50);"Red"===currentPlayer?(redPopulation+=r,document.getElementById("redPopulation").innerText=`Red Population: ${redPopulation}`):"Blue"===currentPlayer&&(bluePopulation+=r,document.getElementById("bluePopulation").innerText=`Blue Population: ${bluePopulation}`),openAlertModal(`Population increased by ${r}!`),checkGameOver();const o="Red"===currentPlayer?redCurrentResearch:blueCurrentResearch;o&&(o.tech.turnsLeft=Math.max(o.tech.turnsLeft-1,0),openAlertModal(`Research time for ${o.tech.name} reduced by 1 turn(s)!`)),updateInventoryDisplay(),closeModal("purchaseModal")}function proposeTrade(){let e,t,n;"Red"===currentPlayer?(e=redInventory,t=blueInventory,n="Blue"):(e=blueInventory,t=redInventory,n="Red");const r=parseInt(document.getElementById("tradeWaterGiveInput").value)||0,o=parseInt(document.getElementById("tradeRegolithGiveInput").value)||0,a=parseInt(document.getElementById("tradeBasaltGiveInput").value)||0,l=parseInt(document.getElementById("tradeSulfurGiveInput").value)||0,s=parseInt(document.getElementById("tradeWaterReceiveInput").value)||0,i=parseInt(document.getElementById("tradeRegolithReceiveInput").value)||0,c=parseInt(document.getElementById("tradeBasaltReceiveInput").value)||0,d=parseInt(document.getElementById("tradeSulfurReceiveInput").value)||0;e.water<r||e.regolith<o||e.basalt<a||e.sulfur<l?openAlertModal("Invalid input: You do not have enough resources to give."):t.water<s||t.regolith<i||t.basalt<c||t.sulfur<d?openAlertModal("Trade declined: The other player does not have enough resources."):(pendingTradeProposal={proposer:currentPlayer,responder:n,waterGive:r,regolithGive:o,basaltGive:a,sulfurGive:l,waterReceive:s,regolithReceive:i,basaltReceive:c,sulfurReceive:d,status:"pending"},openAlertModal("Trade proposal sent to "+n+"."),closeModal("tradeModal"))}function createUnit(e,t,n,r){const o=r.cameras.main.width/10,a=r.cameras.main.height/7,l=e*o+o/2,s=t*a+a/2;let i,c;"Red"===n?(i=r.add.image(l,s,"Red").setScale(.2),c={x:e,y:t,sprite:i,interactiveSet:!1,hasActed:!1},redUnits.push(c)):"Blue"===n&&(i=r.add.image(l,s,"Blue").setScale(.2),c={x:e,y:t,sprite:i,interactiveSet:!1,hasActed:!1},blueUnits.push(c)),i.setDepth(1),board[t][e].content=n}function cancelTrade(){closeModal("tradeModal"),closeModal("baseMenuModal")}function formatTradeDetails(e){let t="";for(const[n,r]of Object.entries(e))r>0&&(t+=`${n.charAt(0).toUpperCase()+n.slice(1)}: ${r}<br>`);return t}function openTradeResponseModal(){document.getElementById("tradeResponseModal");const e=document.getElementById("tradeResponseHeader"),t=document.getElementById("tradeResponseDetails"),n=formatTradeDetails({water:pendingTradeProposal.waterGive,regolith:pendingTradeProposal.regolithGive,basalt:pendingTradeProposal.basaltGive,sulfur:pendingTradeProposal.sulfurGive}),r=formatTradeDetails({water:pendingTradeProposal.waterReceive,regolith:pendingTradeProposal.regolithReceive,basalt:pendingTradeProposal.basaltReceive,sulfur:pendingTradeProposal.sulfurReceive});e.textContent="Trade Proposal from "+pendingTradeProposal.proposer,t.innerHTML=`\n    <strong>${pendingTradeProposal.proposer} offers:</strong><br>\n    ${n}<br>\n    <strong>${pendingTradeProposal.proposer} requests:</strong><br>\n    ${r}\n  `,openModal("tradeResponseModal")}function acceptTrade(){pendingTradeProposal.status="accepted",closeModal("tradeResponseModal")}function declineTrade(){pendingTradeProposal.status="declined",closeModal("tradeResponseModal")}function executeTrade(){let e,t;"Red"===pendingTradeProposal.proposer?(e=redInventory,t=blueInventory):(e=blueInventory,t=redInventory),e.water-=pendingTradeProposal.waterGive,e.regolith-=pendingTradeProposal.regolithGive,e.basalt-=pendingTradeProposal.basaltGive,e.sulfur-=pendingTradeProposal.sulfurGive,t.water-=pendingTradeProposal.waterReceive,t.regolith-=pendingTradeProposal.regolithReceive,t.basalt-=pendingTradeProposal.basaltReceive,t.sulfur-=pendingTradeProposal.sulfurReceive,e.water+=pendingTradeProposal.waterReceive,e.regolith+=pendingTradeProposal.regolithReceive,e.basalt+=pendingTradeProposal.basaltReceive,e.sulfur+=pendingTradeProposal.sulfurReceive,t.water+=pendingTradeProposal.waterGive,t.regolith+=pendingTradeProposal.regolithGive,t.basalt+=pendingTradeProposal.basaltGive,t.sulfur+=pendingTradeProposal.sulfurGive,updateInventoryDisplay()}function resetUnitActions(){("Red"===currentPlayer?redUnits:blueUnits).forEach((e=>{e.hasActed=!1,e.sprite.input&&(e.sprite.input.enabled=!0)})),updateMinerIndicators()}function update(){for(let e=0;e<redUnits.length;e++){const t=redUnits[e];t.interactiveSet||(t.sprite.setInteractive(),t.sprite.on("pointerdown",(function(e){handlePlayerIconClick(t,this)}),this),t.interactiveSet=!0),t.sprite.input.enabled="Red"===currentPlayer&&!t.hasActed&&!playerCanMove}for(let e=0;e<blueUnits.length;e++){const t=blueUnits[e];t.interactiveSet||(t.sprite.setInteractive(),t.sprite.on("pointerdown",(function(e){handlePlayerIconClick(t,this)}),this),t.interactiveSet=!0),t.sprite.input.enabled="Blue"===currentPlayer&&!t.hasActed&&!playerCanMove}}function handlePlayerIconClick(e,t){if("Red"===currentPlayer&&redUnits.includes(e)||"Blue"===currentPlayer&&blueUnits.includes(e)){if(e.hasActed)return void openAlertModal("This unit has already acted this turn.");selectedUnit=e,openActionMenu(t)}}function mineTile(e,t,n){const r=board[t][e],o="Red"===n?redInventory:blueInventory,a=r.water,l=r.regolith,s=r.sulfur,i=r.basalt;o.water+=a,o.regolith+=l,o.sulfur+=s,o.basalt+=i,openAlertModal(`You mined ${a} water, ${l} regolith, ${s} sulfur, and ${i} basalt.`),r.water=0,r.regolith=0,r.sulfur=0,r.basalt=0;const c="Red"===currentPlayer?redUnits.find((n=>n.x===e&&n.y===t)):blueUnits.find((n=>n.x===e&&n.y===t));c&&(c.hasActed=!0),updateMinerIndicators(),areAllTilesDepleted()&&(replenishResources(),openAlertModal("All tiles have been depleted. Resources have been replenished!")),updateInventoryDisplay(),allUnitsActed()&&switchTurn()}function openActionMenu(e){if(e.actionMenu)return;const t=200,n=150;let r=selectedUnit.sprite.x-100,o=selectedUnit.sprite.y-75;r<0?r=0:r+t>e.cameras.main.width&&(r=e.cameras.main.width-t),o<0?o=0:o+n>e.cameras.main.height&&(o=e.cameras.main.height-n);const a=e.add.rectangle(r,o,t,n,0,.8).setOrigin(0,0).setDepth(1e3),l=e.add.text(r+20,o+20,"Move",{fontSize:"24px",fill:"#fff"}).setInteractive().setDepth(1001);l.on("pointerdown",(function(t,n,r,o){o.stopPropagation(),closeActionMenu(e),allowPlayerToMove(e)}),e);const s=e.add.text(r+20,o+60,"Mine",{fontSize:"24px",fill:"#fff"}).setInteractive().setDepth(1001);s.on("pointerdown",(function(e,t,n,r){r.stopPropagation(),closeActionMenu(this),mineTile(selectedUnit.x,selectedUnit.y,currentPlayer),selectedUnit.hasActed=!0,selectedUnit.sprite.input.enabled=!1,allUnitsActed()&&switchTurn(this),selectedUnit=null,playerCanMove=!1}),e);const i=e.add.text(r+20,o+100,"Exit",{fontSize:"24px",fill:"#fff"}).setInteractive().setDepth(1001);i.on("pointerdown",(function(t,n,r,o){o.stopPropagation(),closeActionMenu(e)}),e),e.actionMenu=e.add.container(0,0,[a,l,s,i]),e.actionMenu.setDepth(1e3),e.actionMenu.setInteractive(new Phaser.Geom.Rectangle(r,o,t,n),Phaser.Geom.Rectangle.Contains),e.input.enableDebug(e.actionMenu),e.input.setTopOnly(!0)}function areAllTilesDepleted(){for(let e=0;e<board.length;e++)for(let t=0;t<board[e].length;t++){const n=board[e][t];if(n.water>0||n.regolith>0||n.sulfur>0||n.basalt>0)return!1}return!0}function replenishResources(){for(let e=0;e<board.length;e++)for(let t=0;t<board[e].length;t++)t===redBasePosition.x&&e===redBasePosition.y||t===blueBasePosition.x&&e===blueBasePosition.y||(board[e][t].water=Phaser.Math.Between(2,6),board[e][t].regolith=Phaser.Math.Between(2,8),board[e][t].sulfur=Phaser.Math.Between(0,4),board[e][t].basalt=Phaser.Math.Between(2,6))}function closeActionMenu(e){e.actionMenu&&(e.actionMenu.destroy(),e.actionMenu=null)}function updateInventoryDisplay(e=currentPlayer){if(!document.getElementById("inventoryNavbar"))return void console.error("Navbar not found in DOM");const t=document.getElementById("inventory-title");t&&(t.innerText=`${e} Player Inventory`);const n="Red"===e?redInventory:blueInventory;Object.entries(n).forEach((([e,t])=>{const n=document.getElementById(`inventory-${e.toLowerCase()}`);n&&(n.innerText=` | ${e}: ${t}`)}))}function allowPlayerToMove(e){playerCanMove=!0}function allUnitsActed(){return("Red"===currentPlayer?redUnits:blueUnits).every((e=>e.hasActed))}function updateResearchCountdown(){const e="Red"===currentPlayer?redCurrentResearch:blueCurrentResearch,t=document.getElementById("researchCountdown");t.textContent=e?`Researching ${e.tech.name}: ${e.tech.turnsLeft} turns left`:"No tech is currently being researched."}function addTechTreeToolTip(){document.querySelectorAll(".tech-button").forEach((e=>{e.addEventListener("mouseenter",(function(t){let n=e.querySelector(".tooltip");n||(n=document.createElement("div"),n.classList.add("tooltip"),n.innerHTML="This is a placeholder tech description.",document.body.appendChild(n));const r=e.getBoundingClientRect();n.style.top=r.top-n.offsetHeight-10+"px",n.style.left=r.left+r.width/2-n.offsetWidth/2+"px",n.style.opacity=1})),e.addEventListener("mouseleave",(function(){const t=e.querySelector(".tooltip");t&&(t.style.opacity=0,setTimeout((()=>{t.remove()}),300))}))}))}function handleRedTurnProgress(){redCurrentResearch&&redCurrentResearch.tech.turnsLeft>0&&(redCurrentResearch.tech.turnsLeft--,redCurrentResearch.tech.turnsLeft<=0&&(redCurrentResearch.tech.completed=!0,showTechUnlockedModal("Red",redCurrentResearch.tech.name,redCurrentResearch.branchIndex,redCurrentResearch.techIndex)),updateResearchCountdown())}function handleBlueTurnProgress(){blueCurrentResearch&&blueCurrentResearch.tech.turnsLeft>0&&(blueCurrentResearch.tech.turnsLeft--,blueCurrentResearch.tech.turnsLeft<=0&&(blueCurrentResearch.tech.completed=!0,showTechUnlockedModal("Blue",blueCurrentResearch.tech.name,blueCurrentResearch.branchIndex,blueCurrentResearch.techIndex)),updateResearchCountdown())}function unlockDependentTechs(e,t,n){const r=("Red"===e?redTechProgress:blueTechProgress).branches[t];if(n+1<r.techs.length){const t=r.techs[n+1];t.unlocked||(t.unlocked=!0,console.log(`Unlocked tech: ${t.name} in branch ${r.title} for player ${e}`))}createTechTree()}function resetResearchState(e,t,n){"Red"===e?redCurrentResearch=null:"Blue"===e&&(blueCurrentResearch=null),unlockDependentTechs(e,t,n),createTechTree(),updateResearchCountdown(),updateInventoryDisplay()}function isTechResearched(e,t){return("Red"===e?redTechProgress:blueTechProgress).branches.some((e=>e.techs.some((e=>e.name===t&&e.completed))))}function triggerCrisisEvent(){const e=currentPlayer,t=Phaser.Utils.Array.GetRandom(crisisEvents);t.effect(e),updateInventoryDisplay();document.getElementById("crisisModal");document.getElementById("crisisDescription").innerText=`${e} Player: ${t.description}`,openModal("crisisModal")}function updateMinerIndicators(){("Red"===currentPlayer?redUnits:blueUnits).forEach((e=>{e.hasActed?e.sprite.setTint(8947848):e.sprite.clearTint()}))}redTurnProgress=handleRedTurnProgress,blueTurnProgress=handleBlueTurnProgress;